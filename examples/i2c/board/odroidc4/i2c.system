<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2024, UNSW

    SPDX-License-Identifier: BSD-2-Clause
-->
<system>
    <!--
        These memory regions are required for initialisation. In the future
        we will have separate drivers to initialise the clocks etc
     -->
    <memory_region name="gpio" size="0x4000" phys_addr="0xFF634000"/>
    <memory_region name="clk" size="0x1000" phys_addr="0xFF63C000"/>

    <memory_region name="i2c_bus" size="0x1000" phys_addr="0xFFD1D000"/>

    <!--
	 This system transfers minimal data over I2C and so a data region size of
	 0x1000 is more than enough for our use-case.
    -->
    <memory_region name="client_request_region" size="0x1_000"/>
    <memory_region name="client_response_region" size="0x1_000"/>
    <memory_region name="driver_request_region" size="0x1_000"/>
    <memory_region name="driver_response_region" size="0x1_000"/>
    <memory_region name="data_region" size="0x1_000"/>

    <memory_region name="timer_registers" size="0x1000" phys_addr="0xffd0f000" />

    <protection_domain name="driver" priority="100">
        <program_image path="i2c_driver.elf"/>

		<map mr="driver_request_region" vaddr="0x4_000_000" perms="rw" setvar_vaddr="request_region" />
        <map mr="driver_response_region" vaddr="0x5_000_000" perms="rw" setvar_vaddr="response_region" />

        <map mr="i2c_bus" vaddr="0x3_000_000" perms="rw" setvar_vaddr="i2c_regs" cached="false" />

        <map mr="gpio" vaddr="0x3_100_000" perms="rw" setvar_vaddr="gpio_regs" cached="false" />
        <map mr="clk" vaddr="0x3_200_000" perms="rw" setvar_vaddr="clk_regs" cached="false" />

        <map mr="data_region" vaddr="0x10_000_000" perms="rw" />

        <!-- IRQs for the particular I2C bus we are using -->
        <!-- Main interrupt -->
        <irq irq="247" id="1" trigger="edge"/>
        <!-- TO interrupt (timeout?) -->
        <irq irq="126" id="2" trigger="edge"/>
    </protection_domain>

    <protection_domain name="virt" priority="99" pp="true">
        <program_image path="i2c_virt.elf" />

        <map mr="client_request_region" vaddr="0x4_000_000" perms="rw" />
        <map mr="client_response_region" vaddr="0x5_000_000" perms="rw" />

        <map mr="driver_request_region" vaddr="0x6_000_000" perms="rw" setvar_vaddr="driver_request_region" />
        <map mr="driver_response_region" vaddr="0x7_000_000" perms="rw" setvar_vaddr="driver_response_region" />
    </protection_domain>

    <protection_domain name="client" priority="1">
        <program_image path="client.elf" />

        <map mr="client_request_region" vaddr="0x4_000_000" perms="rw" setvar_vaddr="request_region" />
        <map mr="client_response_region" vaddr="0x5_000_000" perms="rw" setvar_vaddr="response_region" />
        <map mr="data_region" vaddr="0x6_000_000" perms="rw" setvar_vaddr="data_region" />
    </protection_domain>

    <protection_domain name="timer" priority="254" pp="true" passive="true">
        <program_image path="timer_driver.elf" />
        <map mr="timer_registers" vaddr="0x2_000_000" perms="rw" cached="false" setvar_vaddr="gpt_regs" />
        <irq irq="42" id="0" trigger="edge" /> <!-- timer interrupt for timer A -->
    </protection_domain>

    <channel>
        <end pd="client" id="0" />
        <end pd="virt" id="0" />
    </channel>

    <channel>
        <end pd="driver" id="0" />
        <end pd="virt" id="1" />
    </channel>

    <channel>
        <end pd="timer" id="1" />
        <end pd="client" id="1" /> <!-- Should this number change, so should TIMER_CH in timer.h -->
    </channel>
</system>
